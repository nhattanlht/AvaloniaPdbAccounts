
// using Avalonia.Controls;
// using Avalonia.Interactivity;
// using AvaloniaPdbAccounts.ViewModels;
// using System;
// using System.Threading.Tasks;
// using AvaloniaPdbAccounts.Models;
// using AvaloniaPdbAccounts.Services;
// using Oracle.ManagedDataAccess.Client;

// namespace AvaloniaPdbAccounts
// {
//     public partial class MainWindow : Window
//     {
//         private readonly PrivilegeGrant _privilegeGrantVM = new PrivilegeGrant();
//         private readonly PrivilegeManagementViewModel _privilegeManagementVM = new PrivilegeManagementViewModel();
//         private const string Infoconnect = DatabaseSettings.ConnectionString;
//         private readonly UserService _userService = new UserService();
//         private readonly RoleService _roleService = new RoleService();
//         private readonly PrivilegeService _privilegeService = new PrivilegeService();
//         private PrivilegeGrant privilegeGrant = new PrivilegeGrant();

//         public MainWindow()
//         {
//             InitializeComponent();
            
//             this.DataContext = privilegeGrant;
//             // Gán DataContext cho các phần UI
//             AccountsListBox.DataContext = this;
//             UserRoleComboBox.DataContext = _privilegeManagementVM;
//             PermissionListBox.DataContext = this;
//             ObjectTypeComboBox.DataContext = _privilegeGrantVM;
//             ObjectNameComboBox.DataContext = _privilegeGrantVM;
//             ColumnNameComboBox.DataContext = _privilegeGrantVM;
//             PrivilegeComboBox.DataContext = _privilegeGrantVM;
//             RoleComboBox.DataContext = _privilegeManagementVM;
//         }

//         #region User Management
//         private async 
//         #region User Management
//         Task
// LoadAccounts_Click(object sender, RoutedEventArgs e)
//         {
//             try
//             {
//                 using var conn = new OracleConnection(Infoconnect);
//                 await conn.OpenAsync();
//                 var users = await _userService.GetAllUsersAsync(conn);
//                 AccountsListBox.ItemsSource = users;
//             }
//             catch (Exception ex)
//             {
//                 await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//             }
//         }

//         private async void AddUser_Click(object sender, RoutedEventArgs e)
//         {
//             var username = await MessageBox.InputBox(this, "Nhập tên user mới", "Tạo User");
//             if (string.IsNullOrWhiteSpace(username)) return;

//             var password = await MessageBox.InputBox(this, $"Nhập mật khẩu cho user '{username}'", "Tạo User");
//             if (string.IsNullOrWhiteSpace(password)) return;

//             try
//             {
//                 await _userService.CreateUserAsync(username, password);
//                 await LoadAccounts_Click(sender, e);
//             }
//             catch (Exception ex)
//             {
//                 await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//             }
//         }

//         private async void DeleteAccount_Click(object sender, RoutedEventArgs e)
//         {
//             if (AccountsListBox.SelectedItem is string selectedAccount)
//             {
//                 var confirm = await MessageBox.Show(this, $"Bạn có chắc muốn xóa user '{selectedAccount}'?", "Xác nhận", MessageBox.MessageBoxButtons.YesNo);
//                 if (confirm == MessageBox.MessageBoxResult.Yes)
//                 {
//                     try
//                     {
//                         await _userService.DeleteUserAsync(selectedAccount);
//                         await LoadAccounts_Click(sender, e);
//                     }
//                     catch (Exception ex)
//                     {
//                         await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//                     }
//                     #endregion
//                 }
//             }
//         }
//         #endregion

//         #region Role Management
//         private async         
//         #endregion

//         #region Role Management
//         Task
// LoadRoles_Click(object sender, RoutedEventArgs e)
//         {
//             try
//             {
//                 using var conn = new OracleConnection(Infoconnect);
//                 var roles = await _roleService.GetAllRolesAsync(conn);
//                 AccountsListBox.ItemsSource = roles;
//             }
//             catch (Exception ex)
//             {
//                 await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//             }
//         }

//         private async void AddRole_Click(object sender, RoutedEventArgs e)
//         {
//             var role = await MessageBox.InputBox(this, "Nhập tên role mới", "Tạo Role");
//             if (string.IsNullOrWhiteSpace(role)) return;

//             try
//             {
//                 await _roleService.CreateRoleAsync(role);
//                 await LoadRoles_Click(sender, e);
//             }
//             catch (Exception ex)
//             {
//                 await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//             }
//         }
//         #endregion

//         #region Privilege Management
//         private async void CheckPermission_Click(object sender, RoutedEventArgs e)
//         {
//             try
//             {
//                 await _privilegeManagementVM.LoadGranteesAsync();
//                 CheckArea.IsVisible = true;
//             }
//             catch (Exception ex)
//             {
//                 await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//             }
//         }

//         private async void ConfirmCheckButton_Click(object sender, RoutedEventArgs e)
//         {
//             if (UserRoleComboBox.SelectedItem is string selectedGrantee && 
//                 PrivilegeTypeComboBox.SelectedItem is ComboBoxItem selectedType)
//             {
//                 await _privilegeManagementVM.CheckPermissionsAsync(selectedGrantee, selectedType.Content.ToString());
                
//                 // Hiển thị các panel phù hợp
//                 GrantArea.IsVisible = true;
//                 GrantRoleArea.IsVisible = (selectedType.Content.ToString() == "ROLE");
//                 ColumnNameComboBox.IsVisible = !(selectedType.Content.ToString() == "ROLE" || 
//                                                selectedType.Content.ToString() == "SYSTEM");
//             }
//         }

//         private async void GrantPrivilege_Click(object sender, RoutedEventArgs e)
//         {
//             if (UserRoleComboBox.SelectedItem is string selectedGrantee &&
//                 ObjectTypeComboBox.SelectedItem is ComboBoxItem selectedObjType &&
//                 ObjectNameComboBox.SelectedItem is ComboBoxItem selectedObjName &&
//                 PrivilegeComboBox.SelectedItem is ComboBoxItem selectedPrivilege)
//             {
//                 try
//                 {
//                     await _privilegeService.GrantPrivilegeAsync(
//                         selectedGrantee,
//                         selectedObjType.Content.ToString(),
//                         selectedObjName.Content.ToString(),
//                         selectedPrivilege.Content.ToString(),
//                         WithGrantOptionCheckBox.IsChecked == true);
                    
//                     await MessageBox.Show(this, "Cấp quyền thành công!", "Thành công", MessageBox.MessageBoxButtons.Ok);
//                 }
//                 catch (Exception ex)
//                 {
//                     await MessageBox.Show(this, $"Error: {ex.Message}", "Lỗi", MessageBox.MessageBoxButtons.Ok);
//                 }
//             }
//         }
//         #endregion

//         #region UI Events
//         private async void ObjectTypeComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
//         {
//             if (ObjectTypeComboBox.SelectedItem is ComboBoxItem selectedType)
//             {
//                 await _privilegeGrantVM.LoadObjectNamesAsync();
//                 ObjectNameComboBox.ItemsSource = _privilegeGrantVM.ObjectNames;
//             }
//         }

//         private async void ObjectNameComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
//         {
//             if (ObjectNameComboBox.SelectedItem is ComboBoxItem selectedObj)
//             {
//                 _privilegeGrantVM.SelectedObjectName = selectedObj.Content.ToString();
//                 await _privilegeGrantVM.LoadColumnsAsync();
//             }
//         }

//         private void PrivilegeComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
//         {
//             if (PrivilegeComboBox.SelectedItem is ComboBoxItem selectedPriv)
//             {
//                 string privilege = selectedPriv.Content.ToString().ToUpper();
//                 ColumnNameComboBox.IsVisible = (privilege == "SELECT" || privilege == "UPDATE");
//             }
//         }
//         #endregion
//     }
// }